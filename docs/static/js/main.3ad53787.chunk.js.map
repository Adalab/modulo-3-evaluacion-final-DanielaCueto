{"version":3,"sources":["services/ResultsFromApi.js","components/Filter.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","images/Rick_and_Morty_logo.png","components/Header.js","components/App.js","index.js"],"names":["ResultsFromApi","fetch","then","response","json","results","map","character","name","species","photo","image","id","status","origin","episodes","episode","Filter","props","className","type","placeholder","onChange","handleSearchBoxChange","value","searchCharacter","defaultProps","CharacterCard","to","src","alt","CharacterList","filterCharacters","characters","filter","toLowerCase","includes","length","CharacterDetail","undefined","Header","App","useState","setCharacters","setSearchCharacter","routeData","useRouteMatch","characterId","params","console","log","useEffect","exact","path","onSubmit","ev","preventDefault","inputValue","target","parseInt","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ad53787.chunk.js","sourcesContent":["//Pedir los results de la api facilitada\nconst ResultsFromApi = () => {\n  //Llamo a la Api\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then((response) => response.json())\n    .then((response) => {\n      return response.results.map((character) => {\n        return {\n          name: character.name,\n          species: character.species,\n          photo: character.image,\n          id: character.id,\n          status: character.status,\n          origin: character.origin.name,\n          episodes: character.episode,\n        };\n      });\n    });\n};\n\nexport default ResultsFromApi;\n","import PropTypes from \"prop-types\";\nconst Filter = (props) => {\n  return (\n    <input\n      className=\"formulary_input\"\n      type=\"text\"\n      name=\"name\"\n      placeholder=\"Introduce aquí el nombre de tu personaje\"\n      onChange={props.handleSearchBoxChange}\n      value={props.searchCharacter}\n    />\n  );\n};\n\nFilter.defaultProps = {\n  searchCharacter: \"\",\n};\n\nFilter.propTypes = {\n  handleSearchBoxChange: PropTypes.func.isRequired,\n  searchCharacter: PropTypes.string,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst CharacterCard = (props) => {\n  const character = props.character;\n  return (\n    <li className=\"list_card \">\n      <Link to={`/character/${props.character.id}`}>\n        <img src={character.photo} alt={character.name} className=\"list_img\" />\n        <h4 className=\"list_title\">{character.name}</h4>\n        <p className=\"list_text\">{character.species}</p>\n      </Link>\n    </li>\n  );\n};\n\nCharacterCard.propTypes = {\n  character: PropTypes.object.isRequired,\n};\n\nexport default CharacterCard;\n","import PropTypes from \"prop-types\";\nimport CharacterCard from \"./CharacterCard\";\n//import CharacterDetail from \"./CharacterDetail\";\n\nconst CharacterList = (props) => {\n  /*Aquí filtro cada character*/\n  //Filter me retorna un nuevo array con aquellos elementos cuyo nombre coincida con el texto de la búsqueda\n  const filterCharacters = props.characters.filter((character) => {\n    return character.name\n      .toLowerCase()\n      .includes(props.searchCharacter.toLowerCase());\n  });\n  if (filterCharacters.length === 0) {\n    return (\n      <p className=\"list_empty\">\n        No hay ningún personaje que coincida con la palabra{\" \"}\n        {props.searchCharacter}\n      </p>\n    );\n  }\n  return (\n    <ul className=\"list\">\n      {filterCharacters.map((character) => {\n        return <CharacterCard key={character.id} character={character} />;\n      })}\n    </ul>\n  );\n};\n\nCharacterList.defaultProps = {\n  characters: [],\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.array,\n  searchCharacter: PropTypes.string.isRequired,\n};\n\nexport default CharacterList;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterDetail = (props) => {\n  if (props.character === undefined) {\n    return <p className=\"undefined\">El personaje que buscas no existe</p>;\n  } else {\n    return (\n      <section className=\"selected\">\n        <img\n          className=\"selected_img\"\n          src={props.character.photo}\n          alt={props.character.name}\n        ></img>\n        <div>\n          <Link to=\"/\" className=\"selected_back\">\n            {\" \"}\n            &lt; Volver{\" \"}\n          </Link>\n          <h4 className=\"selected_title\">{props.character.name}</h4>\n          <ul className=\"selected_list\">\n            <li>\n              <strong>Specie: </strong>\n              {props.character.species}\n            </li>\n            <li>\n              <strong>Origin planet: </strong>\n              {props.character.origin}\n            </li>\n            <li>\n              <strong># Episodes: </strong>\n              {props.character.episodes.length}\n            </li>\n            <li>\n              <strong>Status: </strong>\n              {props.character.status}\n            </li>\n          </ul>\n        </div>\n      </section>\n    );\n  }\n};\n\nCharacterDetail.propTypes = {\n  character: PropTypes.object,\n};\n\nexport default CharacterDetail;\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.de13d484.png\";","import image from \"../images/Rick_and_Morty_logo.png\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <img className=\"header_img\" src={image} alt=\"Rick and Morty logo\" />\n    </header>\n  );\n};\nexport default Header;\n","import \"../styles/App.scss\";\nimport { useState, useEffect } from \"react\";\nimport ResultsFromApi from \"../services/ResultsFromApi\";\nimport Filter from \"./Filter\";\nimport CharacterList from \"./CharacterList\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Header from \"./Header\";\n\nfunction App() {\n  //constantes de estado\n  const [characters, setCharacters] = useState([]);\n  const [searchCharacter, setSearchCharacter] = useState(\"\");\n  //Función que recibe parametro id y devuelve un character que coincida con ese id.\n  const getCharacter = (id) => {\n    id = parseInt(id);\n    const character = characters.find((character) => {\n      return character.id === id;\n    });\n    //console.log(character);\n    return character;\n  };\n\n  //Aquí se saca la variable para una variable de JS\n  const routeData = useRouteMatch(\"/character/:characterId\");\n  const characterId = routeData !== null ? routeData.params.characterId : \"\";\n  console.log(characterId);\n\n  // uso id para obtener el objecto character\n  const handleSearchBoxChange = (ev) => {\n    ev.preventDefault();\n    const inputValue = ev.target.value;\n    setSearchCharacter(inputValue);\n  };\n\n  useEffect(() => {\n    ResultsFromApi().then((characters) => {\n      //console.log(characters);\n      setCharacters(characters);\n    });\n  }, []);\n\n  return (\n    <div className=\"App page\">\n      <Header></Header>\n      <Switch>\n        <Route exact path=\"/\">\n          <form\n            className=\"formulary\"\n            onSubmit={(ev) => {\n              ev.preventDefault();\n            }}\n          >\n            <Filter\n              handleSearchBoxChange={handleSearchBoxChange}\n              searchCharacter={searchCharacter}\n            />\n          </form>\n\n          <CharacterList\n            characters={characters}\n            searchCharacter={searchCharacter}\n          />\n        </Route>\n        <Route path=\"/character/:characterId\">\n          <CharacterDetail character={getCharacter(characterId)} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}